---
title: "Interactive plots with plotly recitation solutions"
author: "Daniel Quiroz"
format:
  html:
    toc: true
    toc-depth: 4
---

# Introduction

Today we are going to work with microbiome data. In this recitation we
are going to provide microbiome data as the result of the shotgun sequencing
of the pig gut microbiome.

-   Pig microbiome study: [paper](https://journals.asm.org/doi/10.1128/spectrum.02506-22),
    [data](https://buckeyemailosu-my.sharepoint.com/:x:/g/personal/cooperstone_1_osu_edu/EY4vRHdMuKpOiuy-itag7ocB63AB3ukhjc0Y5jGRovfkvg?e=RnMz8e).
    
# Pig gut microbiome data

The goal of this recitation is to replicate the following plot, which
expresses the relationship between the Bacteroidetes and Firmicutes
while the rest of the Phyla levels were assigned to *others*.

```{r echo=FALSE, fig.align='center', fig.height=4, fig.width=4}
knitr::include_graphics("img/updated_stacked_barplot.jpeg")
```

### Load the packages we will use
```{r, message = FALSE, warning = FALSE}
library(tidyverse)
library(plotly)
```


## How many rows and columns does the data have?

```{r message=FALSE, warning=FALSE, paged.print=FALSE}
pig_micro <- read_csv("data/Phyla_RelAbund_Final_Filtered_WithMetadata.csv")

dim(pig_micro)
```

The data contains `r nrow(pig_micro)` rows and `r ncol(pig_micro)` columns

## How many phyla does the data contains and how many columns represents metadata of the experiment?

```{r}
glimpse(pig_micro)
```

The first 5 rows represents metadata:

-   `Sample_Name`
-   `Pig`
-   `Diet`
-   `Time_Point`
-   `Diet_By_Time_Point`

The remainder of the columns represent the different phyla level annotation. 

## Computing the cumulative abundance for other phylum

### Create a new column with a new phyla assignation

Keep the phyla level when they are Firmicutes or Bacteroidetes,
otherwise assign Phyla to "Other level".

> Hint: You may need to pivot the data to evaluate the column names as
> observations

Here, we are creating a new column called `Simplified_Phyla` where if the `Phyla` is Bacteriodetes or Firmicutes, we specify the value that currently exists in `Phyla`, and if its not, then we specify to give the value "Other phyla".

We can do this with [`if_else()`](https://dplyr.tidyverse.org/reference/if_else.html).
```{r}
pig_micro |> 
  pivot_longer(
    # select all the phyla columns
    cols = Acidobacteria:`unclassified (derived from other sequences)`,
    values_to = "Abundance", 
    names_to = "Phyla") |> 
  mutate(Simplified_Phyla = if_else(condition = Phyla %in% c("Bacteroidetes", "Firmicutes"), 
                                    true = Phyla, 
                                    false = "Other phyla")) |> 
  head()
```

Or with [`case_when()`](https://dplyr.tidyverse.org/reference/case_when.html).
```{r}
pig_micro |> 
  pivot_longer(
    # select all the phyla columns
    cols = Acidobacteria:`unclassified (derived from other sequences)`,
    values_to = "Abundance", 
    names_to = "Phyla") |> 
  mutate(Simplified_Phyla = case_when(Phyla == "Bacteroidetes" ~ Phyla,
                           Phyla == "Firmicutes" ~ Phyla,
                      #    .default = "Other phyla")) |> # use this if you have a newer version of R  
                           TRUE ~ "Other phyla")) |> 
  head()
```

### Compute the cumulative abundance by the new `Simplified_Phyla` levels that you created

We want to have a summary that has the relative abundance of each of the `Simplified_Phyla` for each pig.

```{r message=FALSE, warning=FALSE}
pig_clean <- pig_micro |> 
  pivot_longer(
    # select all the phyla columns
    cols = Acidobacteria:`unclassified (derived from other sequences)`,
    values_to = "Abundance", 
    names_to = "Phyla") |> 
  mutate(Simplified_Phyla = if_else(condition = Phyla %in% c("Bacteroidetes", "Firmicutes"), 
                                    true = Phyla, 
                                    false = "Other phyla")) |> 
  group_by(Sample_Name, Simplified_Phyla, Time_Point, Pig) |> 
  summarise(Abundance = sum(Abundance)) 

head(pig_clean)
```

### Create the base bar plot with ggplot

First some wrangling.
```{r}
# what are the time points called again?
unique(pig_clean$Time_Point)

# make Time_Point a factor so the faceting goes Day 0, Day 7, Day 14
# instead of putting Day 14 in the middle
pig_clean$Time_Point <- as.factor(pig_clean$Time_Point)

# set levels to be the order we want
pig_clean$Time_Point <- factor(pig_clean$Time_Point,
                               levels = c("Day 0", "Day 7", "Day 14"))
```

Then plot.
```{r}
stack_barplot <- pig_clean |> 
  ggplot(aes(x = as.numeric(Pig), y = Abundance, fill = Simplified_Phyla, 
    # set text to specify hover test         
             text = glue::glue("{Simplified_Phyla}: {round(Abundance, 3)*100}%"))) + 
  geom_col() +
  scale_fill_brewer(palette = "GnBu") +
  facet_wrap(vars(Time_Point)) +
  theme_classic() +
  labs(y = "Relative Abundance", 
       fill = "Phyla",
       x = "Pig Number",
       title = "Bacteriodetes, Firmicutes, and Other Phyla from \nPig Microbiome Sequencing using Shotgun Metagenomics") +
  theme(panel.grid = element_blank(), 
        axis.text = element_text(color = "black", size = 11),
        strip.text = element_text(color = "black", size = 10), 
        strip.background = element_blank())

stack_barplot
```

```{r eval=FALSE, include=FALSE}
ggsave(plot = stack_barplot,
       filename = "img/updated_stacked_barplot.jpeg")
```


# Make the plot interactive

```{r}
ggplotly(stack_barplot,
         tooltip = "text") |>
  layout(margin = list(t = 100)) # for increasing the padding around the title
```
