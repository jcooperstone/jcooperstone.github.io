---
title: "Visualizing Correlations Recitation Solutions"
author: "Jessica Cooperstone"
subtitle: "Week 8"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Introduction

We will be using some data collection from the [National Health and Nutrition Examination Survey](https://www.cdc.gov/nchs/nhanes/index.htm) which collects data to assess the health and nutritional status of people in the United States. The data from 2009-2012 has been compiled in an R package called `NHANES`.

```{r load libraries and data, warning = FALSE, message = FALSE}
# install.packages("NHANES")
library(NHANES)

# functionality and correlation packages
library(tidyverse)
library(corrplot)
library(ggcorrplot)
library(GGally)
library(Hmisc)
library(reshape2)
library(scales)

knitr::kable(head(NHANES))
```


If you wanted to make a correlation plot for all variables below.
```{r}
NHANES_trimmed <- NHANES |>
  select(Age, BMI, Pulse, starts_with("BP"), TotChol) |>
  drop_na()

NHANES_cor <- cor(NHANES_trimmed)
```

## 1. How correlated are different measures of blood pressure?

In the NHANES dataset, there are 3 measurements for each systolic (the first/top number) and diastolic blood (the second/bottom number) pressure. How reproducible is each type of blood pressure measurement over the 3 samplings? Make visualizations to convey your findings.

### Wrangling, creating two dataframes

1. Includes the 4 measures for systolic BP `BPSysAve`, `BPSys1`, `BPSys2`, `BPSys3`
2. Includes the 4 measures for diastolic BP `BPDiaAve`, `BPDia1`, `BPDia2`, `BPDia3`
```{r create BP dfs}
# create df with all of the BP measurements
# remove missing values
NHANES_BP <- NHANES |>
  select(starts_with("BP")) |>
  drop_na()

# create df with all systolic data
NHANES_systolic <- NHANES_BP |>
  select(contains("Sys"))

# create df with all diastolic data
NHANES_diastolic <- NHANES_BP |>
  select(contains("Dia"))
```

### Looking at relationships using scatteplots
We can look quickly at the relationship betwen all the diastolic BP measurements, and all of the systolic BP measurements using `ggpairs()`.
```{r message = FALSE, warning = FALSE}
NHANES_diastolic |>
  ggpairs(title = "Diastolic Blood Pressure Relationships")
```

From the diastolic data, we can see some values that are zero. Those are biologically implausible so I am going to elect to remove those observations.

```{r}
NHANES_diastolic_no0 <- NHANES_diastolic |>
  filter(BPDiaAve > 0 & BPDia1 > 0 & BPDia2 > 0 & BPDia3 > 0)

# how many observations are there?
nrow(NHANES_diastolic)

# how many obesrvations after removing zero diastolic
nrow(NHANES_diastolic_no0)

# how many observations did we remove?
nrow(NHANES_diastolic) - nrow(NHANES_diastolic_no0)
```

Try again now that we've removed diastolic BP values that are zero.
```{r message = FALSE, warning = FALSE}
NHANES_diastolic_no0 |>
  ggpairs(title = "Diastolic Blood Pressure Relationships")
```

This looks better.


```{r message = FALSE, warning = FALSE}
NHANES_systolic |>
  ggpairs(title = "Systolic Blood Pressure Relationships")
```

### Run correlation analysis with `cor()` and `rcorr()`
```{r run sys and dia cor and rcorr}
# run systolic correlation analysis
NHANES_sys_cor <- cor(NHANES_systolic)

# could also use rcorr()
NHANES_sys_rcorr <- rcorr(as.matrix(NHANES_systolic))

# run diastolic correlation analysis
NHANES_dia_cor <- cor(NHANES_diastolic_no0)

# could also use rcorr()
NHANES_dia_rcorr <- rcorr(as.matrix(NHANES_diastolic_no0))
```


### Prepare to plot with `corrplot()`
```{r rcorr wrangling}
# create a vector of the systolic names for labeling
sys_labels <- c("Systolic BP, Average",
                "Systolic BP 1",
                "Systolic BP 2",
                "Systolic BP 3")

dia_labels <- c("Diastolic BP, Average",
                "Diastolic BP 1",
                "Diastolic BP 2",
                "Diastolic BP 3")

# change row and column names of the correlation matrix
# so they are how we want them to be plotted
colnames(NHANES_sys_rcorr$r) <- sys_labels
rownames(NHANES_sys_rcorr$r) <- sys_labels
colnames(NHANES_dia_rcorr$r) <- dia_labels
rownames(NHANES_dia_rcorr$r) <- dia_labels

# change row and column names of the pvalue matrix
# so they are how we want them to be plotted
colnames(NHANES_sys_rcorr$P) <- sys_labels
rownames(NHANES_sys_rcorr$P) <- sys_labels
colnames(NHANES_dia_rcorr$P) <- dia_labels
rownames(NHANES_dia_rcorr$P) <- dia_labels
```

Plot with `corrplot()`.
```{r rcorr systolic, fig.height=6, fig.width = 6}
corrplot(NHANES_sys_rcorr$r, # the correlation matrix
         type = "lower", # lower triangle
         tl.col = "black", # axis labels are black
         p.mat  = NHANES_sys_rcorr$P, # pvalue matrix
         sig.level = 0.05, # how sig does a cor need to be to be included
         insig = "blank", # do not display insignificant correlations
         addCoef.col = "white", # display correlations in black
         diag = FALSE, # don't show the diagonal (because this is all 1)
         number.cex = 1.0, # size of correlation font
         col = colorRampPalette(c("#d8b365", "#f5f5f5", "#5ab4ac"))(100)) # change colors to be colorblind friendly
```

```{r rcorr diastolic, fig.height=6, fig.width = 6}
corrplot(NHANES_dia_rcorr$r, # the correlation matrix
         type = "lower", # lower triangle
         tl.col = "black", # axis labels are black
         p.mat  = NHANES_dia_rcorr$P, # pvalue matrix
         sig.level = 0.05, # how sig does a cor need to be to be included
         insig = "blank", # do not display insignificant correlations
         addCoef.col = "white", # display correlations in black
         diag = FALSE, # don't show the diagonal (because this is all 1)
         number.cex = 1.0, # size of correlation font
         col = colorRampPalette(c("#d8b365", "#f5f5f5", "#5ab4ac"))(100)) # change colors to be colorblind friendly
```

### Plot with `ggcorrplot()`
```{r}
ggcorrplot(NHANES_sys_cor)
```

```{r}
ggcorrplot(NHANES_dia_cor)
```

All are so highly correlated just looks red.

Can try adjusting the scale.

```{r}
ggcorrplot(NHANES_sys_cor) +
  scale_fill_gradient2(limit = c(0.8,1), # set limits for corr range
                       low = "#e9a3c9", mid = "#f7f7f7", high =  "#a1d76a", # pick colors
                       midpoint = 0.9) + # set midpoint
  scale_x_discrete(labels = sys_labels) + # change x-axis labels
  scale_y_discrete(labels = sys_labels) + # change y-axis labels
  labs(fill = "Correlation \ncoefficient",
       title = "Correlations between measurements of systolic \nblood pressure in NHANES data")
```

```{r}
ggcorrplot(NHANES_dia_cor) +
  scale_fill_gradient2(limit = c(0.8,1), # set limits for corr range
                       low = "#e9a3c9", mid = "#f7f7f7", high =  "#a1d76a", # pick colors
                       midpoint = 0.9) + # set midpoint
  scale_x_discrete(labels = dia_labels) + # change x-axis labels
  scale_y_discrete(labels = dia_labels) + # change y-axis labels
  labs(fill = "Correlation \ncoefficient",
       title = "Correlations between measurements of diastolic \nblood pressure in NHANES data")
```

### Prepare to plot with `melt()` and `ggplot()`

Create a lower triangle object to plot.
```{r create lower triangle}
# "save as"
sys_lower <- NHANES_sys_cor
dia_lower <- NHANES_dia_cor

# use function upper.tri() and set the upper triangle all to NA
# then we can keep only the lower triangle
sys_lower[upper.tri(sys_lower)] <- NA
dia_lower[upper.tri(dia_lower)] <- NA

# melt to go back to long format
melted_sys_lower <- melt(sys_lower, na.rm = TRUE)
melted_dia_lower <- melt(dia_lower, na.rm = TRUE)

# did it work?
head(melted_sys_lower) 
head(melted_dia_lower) 
```

Plot systolic
```{r manual-lower sys}
# create a vector of the systolic names for labeling
sys_labels <- c("Systolic BP, Average",
                "Systolic BP 1",
                "Systolic BP 2",
                "Systolic BP 3")

melted_sys_lower |>
  ggplot(aes(x = Var1, y = Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = round(value, 2)), color = "black") +
  scale_fill_gradient2(low = "#ef8a62",
                       mid = "#f7f7f7",
                       high = "#67a9cf",
                       limits = c(-1, 1)) +
  scale_x_discrete(labels = sys_labels) +
  scale_y_discrete(labels = sys_labels) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1),
        legend.justification = c(1, 0),
        legend.position = c(0.5, 0.7),
        legend.direction = "horizontal") +
  labs(fill = "Correlation \ncoefficient",
       x = "",
       y = "",
       title = "Correlation measures of systolic blood pressure at 3 times",
       subtitle = "Data collected from NHANES 2009-2012",
       caption = "Number presents correlation coefficient \nAll correlations are statistically significant (p < 0.05)")
```

Plot diastolic
```{r manual-lower dia}
# create a vector of the systolic names for labeling
dia_labels <- c("Diastolic BP, Average",
                "Diastolic BP 1",
                "Diastolic BP 2",
                "Diastolic BP 3")

melted_dia_lower |>
  ggplot(aes(x = Var1, y = Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = round(value, 2)), color = "black") +
  scale_fill_gradient2(low = "#f1a340",
                       mid = "#f7f7f7",
                       high = "#998ec3",
                       limits = c(-1, 1)) +
  scale_x_discrete(labels = dia_labels) +
  scale_y_discrete(labels = dia_labels) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1),
        legend.justification = c(1, 0),
        legend.position = c(0.5, 0.7),
        legend.direction = "horizontal") +
  labs(fill = "Correlation \ncoefficient",
       x = "",
       y ="",
       title = "Correlation measures of diastolic blood pressure at 3 times",
       subtitle = "Data collected from NHANES 2009-2012",
       caption = "Number presents correlation coefficient \nAll correlations are statistically significant (p < 0.05)")
```

## 2. How correlated are different physical measurements, health, and lifestyle variables?

In the NHANES dataset, there are data for subject `BMI`, `Pulse`, `BPSysAve`, `BPDiaAve`, `TotalChol`.

Create a series of plots to show the relationship between these variables with each other.

### Wrangle 
Create a dataframe that includes only the variables we want to correlate, and drop the observations with missing values.
```{r wrangle q2}
nhanes_trimmed <- NHANES |>
  select(BMI, Pulse, BPSysAve, BPDiaAve, TotChol) |>
  drop_na()
```

### Visualize with `ggpairs()` 
Here, we don't have to specify columns since we're using them all.
```{r ggpairs q2, message = FALSE, warning = FALSE, fig.height = 6, fig.width = 6}
nhanes_trimmed |>
    ggpairs(aes(alpha = 0.01), # note alpha inside aes which is weird idk why
            lower = list(continuous = "smooth"),
            columnLabels = c("BMI", "Pulse", "Systolic BP", "Diastolic BP", "Total Cholesterol"))
```

### Create a correlation plot with `corrplot()`

First we will make our trimmed df a matrix.
```{r}
# convert into a matrix as this is what corrplot takes
nhanes_trimmed_matrix <- nhanes_trimmed |>
  as.matrix() 

nhanes_rcorr <- rcorr(nhanes_trimmed_matrix, type = "pearson")

# correlation matrix
nhanes_rcorr$r

# pvalue matrix
nhanes_rcorr$P
```

Wrangle labels
```{r}
# create a vector of how i want the labels to look
nhanes_labels <- c("BMI",
                   "Pulse",
                   "Systolic \nBlood Pressure",
                   "Diastolic \nBlood Pressure",
                   "Total Cholesterol")

# change row and column names of the correlation matrix
# so they are how we want them to be plotted
colnames(nhanes_rcorr$r) <- nhanes_labels
rownames(nhanes_rcorr$r) <- nhanes_labels

# change row and column names of the pvalue matrix
# so they are how we want them to be plotted
colnames(nhanes_rcorr$P) <- nhanes_labels
rownames(nhanes_rcorr$P) <- nhanes_labels
```


Make the correlation plot. The numbers are the correlation coefficients for relationships that are significant based on our criteria.
```{r}
corrplot(nhanes_rcorr$r, # the correlation matrix
         type = "lower", # lower triangle
         tl.col = "black", # axis labels are black
         p.mat  = nhanes_rcorr$P, # pvalue matrix
         sig.level = 0.05, # how sig does a cor need to be to be included
         insig = "blank", # do not display insignificant correlations
         addCoef.col = "black", # display correlations in black
         diag = FALSE, # don't show the diagonal (because this is all 1)
         number.cex = 0.6) # size of correlation font
```


